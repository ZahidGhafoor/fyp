{"version":3,"file":"static/js/5128.b0a8dd49.chunk.js","mappings":"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","sources":["pages/AccountMostOrder/AccountMostOrderList/AccountMostOrderList.tsx","pages/AccountMostOrder/AccountMostOrderFilter/AccountMostOrderFilter.tsx","pages/AccountMostOrder/AccountMostOrderFilter/index.ts","pages/AccountMostOrder/AccountMostOrder.tsx","services/order.service.ts"],"sourcesContent":["import { StyledTableCell, StyledTableRow } from \"components/templates/Tables\";\nimport {\n  Table,\n  TableRow,\n  TableBody,\n  TableHead,\n  TableContainer,\n} from \"@mui/material\";\nimport Stack from \"@mui/material/Stack\";\n\nimport { BsTrashFill } from \"react-icons/bs\";\nimport { AiOutlineEdit } from \"react-icons/ai\";\n\nimport TableLoadingWrapper from \"components/templates/TableLoadingWrapper\";\nimport Button from \"components/atoms/Button\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useAppDispatch, useAppSelector } from \"redux/hooks\";\nimport OrderService from \"services/order.service\";\nimport { useEffect } from \"react\";\n\nconst AccountMostOrderList = () => {\n  const navigate = useNavigate();\n  const dispatch = useAppDispatch();\n  const mostOrder = useAppSelector((state) => state.order.mostOrders);\n  const loading = useAppSelector((state) => state.order.loading);\n\n  useEffect(() => {\n    OrderService.getAccountWithMostOrders(dispatch);\n  }, [dispatch]);\n\n  console.log(\"most order are=======\", mostOrder);\n\n  return (\n    <div>\n      <TableContainer>\n        <Table\n          aria-label=\"customized table\"\n          sx={{\n            minWidth: \"100%\",\n            borderSpacing: \"0 10px\",\n            borderBottomWidth: \"0px\",\n            borderCollapse: \"separate\",\n          }}\n        >\n          <TableLoadingWrapper\n            container\n            coloumns={4}\n            loading={loading}\n            message=\"No Order available\"\n            length={mostOrder?.length}\n          >\n            <TableHead>\n              <TableRow>\n                <StyledTableCell>First Name</StyledTableCell>\n                <StyledTableCell>Last Name</StyledTableCell>\n                <StyledTableCell>Phone</StyledTableCell>\n                <StyledTableCell>Order Count</StyledTableCell>\n                <StyledTableCell>Order Total</StyledTableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {mostOrder.map((mostOrder: any, i: number) => (\n                <StyledTableRow key={i}>\n                  <StyledTableCell>{mostOrder.firstName}</StyledTableCell>\n                  <StyledTableCell>{mostOrder.lastName}</StyledTableCell>\n                  <StyledTableCell>{mostOrder.phone}</StyledTableCell>\n                  <StyledTableCell>{mostOrder.ordersCount}</StyledTableCell>\n                  <StyledTableCell>{mostOrder.ordersTotal}</StyledTableCell>\n                </StyledTableRow>\n              ))}\n            </TableBody>\n          </TableLoadingWrapper>\n        </Table>\n      </TableContainer>\n    </div>\n  );\n};\n\nexport default AccountMostOrderList;\n","import React from 'react'\nimport { fields } from \".\";\n\nimport FiltersForm from 'components/templates/FiltersForm';\n\nexport default function AccountMostOrderFilter() {\n    const handleSubmit = (values: any) => {};\n\n    return <FiltersForm onSubmit={handleSubmit} myFields={fields} />;\n}\n\n","import  CheckboxRedux  from 'components/molecules/CheckboxRedux';\nimport  InputRedux from 'components/molecules/InputRedux';\nimport { ReduxFormField } from 'components/molecules/ReduxFormFields';\nimport SelectRedux from 'components/molecules/SelectRedux';\nimport  DatePickerRedux from 'components/molecules/DatePickerRedux';\n\n\n\n\nexport { default } from \"./AccountMostOrderFilter\";\n\nexport const fields: ReduxFormField[] = [\n  \n  \n\n  {\n    label: \"Start Date \",\n    name: \"start_date\",\n    component: DatePickerRedux,\n    cellProps: { md: 4 },\n  },\n\n\n  {\n    label: \"End Date\",\n    name: \"end_date\",\n    component: DatePickerRedux,\n    cellProps: { md: 4 },\n  },\n  {\n    label: \"Page Size\",\n    name: \"page_size\",\n    component: InputRedux,\n    cellProps: { md: 4 },\n  },\n\n\n \n \n  \n];\n","import { Container, Stack } from \"@mui/material\";\nimport Button from \"components/atoms/Button\";\nimport Banner from \"components/templates/Banner\";\nimport BasicCard from \"components/templates/BasicCard\";\nimport { useNavigate } from \"react-router-dom\";\nimport AccountMostOrderList from \"./AccountMostOrderList\";\nimport AccountMostOrderFilter from \"./AccountMostOrderFilter\";\nimport { useAppSelector } from \"redux/hooks\";\n\nconst AccountMostOrder = () => {\n  const mostOrder = useAppSelector((state) => state.order.mostOrders);\n\n  const navigate = useNavigate();\n  return (\n    <Container maxWidth=\"lg\">\n      <Banner heading={`Accounts With Most Orders (${mostOrder.length})`}>\n        <Stack direction=\"row\" spacing={2}>\n          <Button\n            color=\"secondary\"\n            variant=\"contained\"\n            sx={{ borderRadius: \"25px\" }}\n          >\n            Export\n          </Button>\n        </Stack>\n      </Banner>\n      <BasicCard>\n        <AccountMostOrderFilter />\n      </BasicCard>\n      <BasicCard>\n        <AccountMostOrderList />\n      </BasicCard>\n    </Container>\n  );\n};\n\nexport default AccountMostOrder;\n","import { formLoaderActions } from \"./../redux/slices/formLoader/formLoaderSlice\";\nimport { orderActions } from \"../redux/slices/order/orderSlice\";\nimport http from \"./http.service\";\nimport { AppDispatch } from \"redux/store\";\nimport Promisable from \"./promisable.service\";\nimport { NavigateFunction } from \"react-router-dom\";\n\nconst url = `/orders`;\n\nconst OrderService = {\n  getAllOrders: async (dispatch?: AppDispatch) => {\n    dispatch?.(formLoaderActions.setLoading(true));\n\n    http.setJWT();\n\n    const [success, error]: any = await Promisable.asPromise(\n      http.get(`${url}`)\n    );\n\n    if (success) {\n      const { allOrders } = success.data.data;\n      dispatch?.(orderActions.setOrders(allOrders));\n    }\n\n    dispatch?.(formLoaderActions.setLoading(false));\n\n    return [success, error];\n  },\n  getAccountWithMostOrders: async (dispatch?: AppDispatch) => {\n    dispatch?.(orderActions.setLoading(true));\n\n    http.setJWT();\n\n    const [success, error]: any = await Promisable.asPromise(\n      http.get(`${url}/account-with-most-orders`)\n    );\n\n    if (success) {\n      const { accountWithMostOrders } = success.data.data;\n\n      dispatch?.(orderActions.setMostOrders(accountWithMostOrders));\n    }\n\n    dispatch?.(orderActions.setLoading(false));\n\n    return [success, error];\n  },\n};\n\nexport default OrderService;\n"],"names":["useNavigate","dispatch","useAppDispatch","mostOrder","useAppSelector","state","order","mostOrders","loading","useEffect","OrderService","console","log","TableContainer","Table","sx","minWidth","borderSpacing","borderBottomWidth","borderCollapse","TableLoadingWrapper","container","coloumns","message","length","TableHead","TableRow","TableBody","map","i","firstName","lastName","phone","ordersCount","ordersTotal","AccountMostOrderFilter","FiltersForm","onSubmit","values","myFields","fields","label","name","component","DatePickerRedux","cellProps","md","InputRedux","Container","maxWidth","Banner","heading","Stack","direction","spacing","Button","color","variant","borderRadius","BasicCard","url","getAllOrders","formLoaderActions","http","Promisable","success","error","allOrders","data","orderActions","getAccountWithMostOrders","accountWithMostOrders"],"sourceRoot":""}