{"version":3,"file":"static/js/5557.f84e15cf.chunk.js","mappings":"yWAeMA,EAAkB,CACtB,CACEC,KAAM,YACNC,MAAO,KAET,CACED,KAAM,YACNC,MAAO,KAET,CACED,KAAM,YACNC,MAAO,KAET,CACED,KAAM,YACNC,MAAO,KAET,CACED,KAAM,YACNC,MAAO,KAET,CACED,KAAM,YACNC,MAAO,KAET,CACED,KAAM,YACNC,MAAO,KAET,CACED,KAAM,YACNC,MAAO,KAET,CACED,KAAM,YACNC,MAAO,KAET,CACED,KAAM,YACNC,MAAO,MAII,SAASC,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MASjB,OACE,SAACC,EAAA,EAAD,WACE,SAACC,EAAA,EAAD,CACE,aAAW,mBACXC,GAAI,CACFC,SAAU,OACVC,cAAe,SACfC,kBAAmB,MACnBC,eAAgB,YANpB,UASE,UAACC,EAAA,EAAD,CACEC,WAAS,EACTC,SAAU,EACVC,SAAS,EACTC,QAAQ,0BACRC,OAAQ,GALV,WAOE,SAACC,EAAA,EAAD,WACE,UAACC,EAAA,EAAD,YACE,SAAC,KAAD,oBACA,SAAC,KAAD,qBACA,SAAC,KAAD,UAGJ,SAACC,EAAA,EAAD,UACGrB,EAAgBsB,KAAI,SAACC,EAAYC,GAAb,OACnB,UAAC,KAAD,YACE,SAAC,KAAD,UAAkBD,EAAMtB,QACxB,SAAC,KAAD,UAAkBsB,EAAMrB,SACxB,SAAC,KAAD,WACE,UAACuB,EAAA,EAAD,CAAOC,UAAU,MAAMC,QAAS,EAAhC,WACE,SAACC,EAAA,EAAD,CACEC,QAAQ,YACRC,MAAM,QACNC,kBAAgB,EAChBC,QAAS,kBACP5B,EAAS,0BAAD,OAA2BmB,EAAMU,MAE3CzB,GAAI,CAAEC,SAAU,QAPlB,UASE,SAAC,MAAD,OAEF,SAACmB,EAAA,EAAD,CACEC,QAAQ,YACRC,MAAM,YACNC,kBAAgB,EAChBC,QAAS,kBACP5B,EAAS,0BAAD,OAA2BmB,EAAMU,MAE3CzB,GAAI,CAAEC,SAAU,QAPlB,UASE,SAAC,MAAD,aAzBae,e,0BC5FpB,SAASU,IAGtB,OAAO,SAACC,EAAA,EAAD,CAAaC,SAFC,SAACC,KAEsBC,SAAUC,ICDjD,IAAMA,EAA2B,CACtC,CACEC,MAAO,YACPvC,KAAM,YACNwC,UAAWC,EAAAA,EACXC,UAAW,CAAEC,GAAI,KCDN,SAASC,IACtB,IAAMzC,GAAWC,EAAAA,EAAAA,MACjB,OACE,UAACyC,EAAA,EAAD,CAAWC,SAAS,KAApB,WACE,SAACC,EAAA,EAAD,CAAQC,QAAQ,iCAAhB,UACE,UAACxB,EAAA,EAAD,CAAOC,UAAU,MAAMC,QAAS,EAAhC,WACE,SAACC,EAAA,EAAD,CAAQE,MAAM,YAAYD,QAAQ,YAAlC,qBAGA,SAACD,EAAA,EAAD,CACEE,MAAM,UACND,QAAQ,YACRG,QAAS,kBAAM5B,EAAS,wBAH1B,6BASJ,SAAC8C,EAAA,EAAD,WACE,SAAChB,EAAD,OAEF,SAACgB,EAAA,EAAD,WACE,SAAC,EAAD","sources":["pages/PfandCategories/PfandCategoriesList/PfandCategoriesList.tsx","pages/PfandCategories/PfandCategoryFilters/PfandCategoryFilters.tsx","pages/PfandCategories/PfandCategoryFilters/index.ts","pages/PfandCategories/PfandCategories.tsx"],"sourcesContent":["import { useNavigate } from \"react-router\";\nimport Button from \"components/atoms/Button\";\nimport { StyledTableCell, StyledTableRow } from \"components/templates/Tables\";\nimport {\n  Table,\n  TableRow,\n  TableBody,\n  TableHead,\n  TableContainer,\n} from \"@mui/material\";\nimport Stack from \"@mui/material/Stack\";\nimport TableLoadingWrapper from \"components/templates/TableLoadingWrapper\";\nimport { BsTrashFill } from \"react-icons/bs\";\nimport { AiOutlineEdit } from \"react-icons/ai\";\n\nconst pfandCategories = [\n  {\n    name: \"6x Wasser\",\n    price: 1.5,\n  },\n  {\n    name: \"6x Wasser\",\n    price: 1.5,\n  },\n  {\n    name: \"6x Wasser\",\n    price: 1.5,\n  },\n  {\n    name: \"6x Wasser\",\n    price: 1.5,\n  },\n  {\n    name: \"6x Wasser\",\n    price: 1.5,\n  },\n  {\n    name: \"6x Wasser\",\n    price: 1.5,\n  },\n  {\n    name: \"6x Wasser\",\n    price: 1.5,\n  },\n  {\n    name: \"6x Wasser\",\n    price: 1.5,\n  },\n  {\n    name: \"6x Wasser\",\n    price: 1.5,\n  },\n  {\n    name: \"6x Wasser\",\n    price: 1.5,\n  },\n];\n\nexport default function CategoriesList() {\n  const navigate = useNavigate();\n  //   const dispatch = useAppDispatch();\n  //   const categories = useAppSelector((state) => state.categories.cities);\n  //   const loading = useAppSelector((state) => state.categories.loading);\n\n  //   useEffect(() => {\n  //     CategoriesService.getAllCategories(dispatch);\n  //   }, [dispatch]);\n\n  return (\n    <TableContainer>\n      <Table\n        aria-label=\"customized table\"\n        sx={{\n          minWidth: \"100%\",\n          borderSpacing: \"0 10px\",\n          borderBottomWidth: \"0px\",\n          borderCollapse: \"separate\",\n        }}\n      >\n        <TableLoadingWrapper\n          container\n          coloumns={4}\n          loading={false}\n          message=\"No categories available\"\n          length={10}\n        >\n          <TableHead>\n            <TableRow>\n              <StyledTableCell>Name</StyledTableCell>\n              <StyledTableCell>Price</StyledTableCell>\n              <StyledTableCell></StyledTableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {pfandCategories.map((pfand: any, index: any) => (\n              <StyledTableRow key={index}>\n                <StyledTableCell>{pfand.name}</StyledTableCell>\n                <StyledTableCell>{pfand.price}</StyledTableCell>\n                <StyledTableCell>\n                  <Stack direction=\"row\" spacing={2} >\n                    <Button\n                      variant=\"contained\"\n                      color=\"error\"\n                      disableElevation\n                      onClick={() =>\n                        navigate(`/update-pfand-category/${pfand.id}`)\n                      }\n                      sx={{ minWidth: \"auto\" }}\n                    >\n                      <BsTrashFill />\n                    </Button>\n                    <Button\n                      variant=\"contained\"\n                      color=\"secondary\"\n                      disableElevation\n                      onClick={() =>\n                        navigate(`/update-pfand-category/${pfand.id}`)\n                      }\n                      sx={{ minWidth: \"auto\" }}\n                    >\n                      <AiOutlineEdit />\n                    </Button>\n                  </Stack>\n                </StyledTableCell>\n              </StyledTableRow>\n            ))}\n          </TableBody>\n        </TableLoadingWrapper>\n      </Table>\n    </TableContainer>\n  );\n}\n","import FiltersForm from \"components/templates/FiltersForm\";\nimport { fields } from \".\";\n\nexport default function PfandCategoryFilters() {\n  const handleSubmit = (values: any) => {};\n\n  return <FiltersForm onSubmit={handleSubmit} myFields={fields} />;\n}\n","import InputRedux from \"components/molecules/InputRedux\";\nimport { ReduxFormField } from \"components/molecules/ReduxFormFields\";\n\nexport { default } from \"./PfandCategoryFilters\";\n\nexport const fields: ReduxFormField[] = [\n  {\n    label: \"Page Size\",\n    name: \"page_size\",\n    component: InputRedux,\n    cellProps: { md: 6 },\n  },\n];\n","import { Container, Stack } from \"@mui/material\";\nimport Button from \"components/atoms/Button\";\nimport Banner from \"components/templates/Banner\";\nimport BasicCard from \"components/templates/BasicCard\";\nimport React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport PfandCategoriesList from \"./PfandCategoriesList\";\nimport PfandCategoryFilters from \"./PfandCategoryFilters\";\n\nexport default function PfandCategories() {\n  const navigate = useNavigate();\n  return (\n    <Container maxWidth=\"lg\">\n      <Banner heading=\"Pfand Category Management (15)\">\n        <Stack direction=\"row\" spacing={2}>\n          <Button color=\"secondary\" variant=\"contained\">\n            Export\n          </Button>\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={() => navigate(\"/add-pfand-category\")}\n          >\n            + Add New\n          </Button>\n        </Stack>\n      </Banner>\n      <BasicCard>\n        <PfandCategoryFilters />\n      </BasicCard>\n      <BasicCard>\n        <PfandCategoriesList />\n      </BasicCard>\n    </Container>\n  );\n}\n"],"names":["pfandCategories","name","price","CategoriesList","navigate","useNavigate","TableContainer","Table","sx","minWidth","borderSpacing","borderBottomWidth","borderCollapse","TableLoadingWrapper","container","coloumns","loading","message","length","TableHead","TableRow","TableBody","map","pfand","index","Stack","direction","spacing","Button","variant","color","disableElevation","onClick","id","PfandCategoryFilters","FiltersForm","onSubmit","values","myFields","fields","label","component","InputRedux","cellProps","md","PfandCategories","Container","maxWidth","Banner","heading","BasicCard"],"sourceRoot":""}