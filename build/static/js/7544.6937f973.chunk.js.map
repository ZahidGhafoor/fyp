{"version":3,"file":"static/js/7544.6937f973.chunk.js","mappings":"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","sources":["components/organisms/SelectCategories/SelectCategories.tsx","pages/ProductManagement/ProductFilters/ProductFilters.tsx","pages/ProductManagement/ProductFilters/index.ts","pages/ProductManagement/ProductsList/ProductsList.tsx","pages/ProductManagement/ProductManagement.tsx","services/categories.service.ts","services/products.service.ts"],"sourcesContent":["import { useEffect } from \"react\";\nimport SelectRedux from \"components/molecules/SelectRedux\";\nimport { useAppDispatch, useAppSelector } from \"redux/hooks\";\nimport CategoriesService from \"services/categories.service\";\n\nexport default function SelectCategories(props: any) {\n  const dispatch = useAppDispatch();\n  const categoriesOptions = useAppSelector(\n    (state) => state.category.categoriesOptions\n  );\n\n  useEffect(() => {\n    CategoriesService.getCategories({}, dispatch);\n  }, [dispatch]);\n\n  return <SelectRedux {...props} options={categoriesOptions} />;\n}\n","import FiltersForm from \"components/templates/FiltersForm\";\nimport { productActions } from \"redux/slices/product/productSlice\";\nimport { fields } from \".\";\nimport { reset } from \"redux-form\";\n\nimport { useAppDispatch } from \"redux/hooks\";\n\nexport default function ProductFilters() {\n  const dispatch = useAppDispatch();\n  const form = \"productFiltersForm\";\n  const handleSubmit = (values: any) => {\n    const data = { ...values };\n\n    if (data.pageSize) data.pageSize = Number(data.pageSize);\n\n    dispatch(productActions.setFilter({ filters: data }));\n  };\n\n  return (\n    <FiltersForm\n      onSubmit={handleSubmit}\n      myFields={fields}\n      form={form}\n      onClickReset={() => {\n        dispatch(reset(form));\n        dispatch(productActions.setFilter({}));\n      }}\n    />\n  );\n}\n","import InputRedux from \"components/molecules/InputRedux\";\nimport SelectRedux from \"components/molecules/SelectRedux\";\nimport { ReduxFormField } from \"components/molecules/ReduxFormFields\";\nimport SelectCategories from \"components/organisms/SelectCategories\";\n\nexport { default } from \"./ProductFilters\";\n\nexport const fields: ReduxFormField[] = [\n  {\n    name: \"Id\",\n    label: \"Id\",\n    component: InputRedux,\n    cellProps: { md: 3 },\n  },\n  {\n    name: \"Name\",\n    label: \"Name\",\n    component: InputRedux,\n    cellProps: { md: 3 },\n  },\n  {\n    name: \"Sku\",\n    label: \"SKU\",\n    component: InputRedux,\n    cellProps: { md: 3 },\n  },\n  {\n    name: \"Barcode\",\n    label: \"Barcode\",\n    component: InputRedux,\n    cellProps: { md: 3 },\n  },\n  {\n    name: \"IsPublished\",\n    label: \"Is Published\",\n    component: SelectRedux,\n    SelectProps: {\n      options: [\n        { value: \"true\", label: \"Yes\" },\n        { value: \"false\", label: \"No\" },\n      ],\n    },\n    cellProps: { md: 4 },\n  },\n  {\n    label: \"Category\",\n    name: \"Category\",\n    component: SelectCategories,\n    cellProps: { md: 4 },\n  },\n  {\n    label: \"Page Size\",\n    name: \"pageSize\",\n    component: InputRedux,\n    cellProps: { md: 4 },\n  },\n];\n","import { useNavigate } from \"react-router\";\nimport Button from \"components/atoms/Button\";\nimport { StyledTableCell, StyledTableRow } from \"components/templates/Tables\";\nimport {\n  Table,\n  TableRow,\n  TableBody,\n  TableHead,\n  TableContainer,\n} from \"@mui/material\";\nimport Stack from \"@mui/material/Stack\";\nimport TableLoadingWrapper from \"components/templates/TableLoadingWrapper\";\nimport { AiOutlineEdit } from \"react-icons/ai\";\nimport { BsTrashFill } from \"react-icons/bs\";\nimport { useAppDispatch, useAppSelector } from \"redux/hooks\";\nimport { useEffect } from \"react\";\nimport ProductsService from \"services/products.service\";\nimport { modalActions, MODAL } from \"redux/slices/modal\";\n\nexport default function ProductsList() {\n  const navigate = useNavigate();\n  const dispatch = useAppDispatch();\n  const products = useAppSelector((state) => state.product.products);\n  const loading = useAppSelector((state) => state.product.loading);\n  const filter = useAppSelector((state) => state.product.filter);\n  const refreshLoader = useAppSelector((state) => state.product.refreshLoader);\n\n  useEffect(() => {\n    ProductsService.getProducts(filter, dispatch);\n  }, [filter, dispatch]);\n\n  return (\n    <TableContainer>\n      <Table\n        aria-label=\"customized table\"\n        sx={{\n          minWidth: \"100%\",\n          borderSpacing: \"0 10px\",\n          borderBottomWidth: \"0px\",\n          borderCollapse: \"separate\",\n        }}\n      >\n        <TableLoadingWrapper\n          container\n          coloumns={4}\n          loading={loading}\n          length={refreshLoader ? 0 : products.length}\n          message=\"No products available\"\n        >\n          <TableHead>\n            <TableRow>\n              <StyledTableCell>ID</StyledTableCell>\n              <StyledTableCell>Name</StyledTableCell>\n              <StyledTableCell>Published</StyledTableCell>\n              <StyledTableCell></StyledTableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {products?.map((product: any, i: number) => (\n              <StyledTableRow key={i}>\n                <StyledTableCell>{product._id}</StyledTableCell>\n                <StyledTableCell>{product.name}</StyledTableCell>\n                <StyledTableCell>\n                  {product.is_published === true ? \"Yes\" : \"No\"}\n                </StyledTableCell>\n                <StyledTableCell align=\"right\">\n                  <Stack direction=\"row\" spacing={2} justifyContent=\"right\">\n                    <Button\n                      // size=\"small\"\n                      variant=\"contained\"\n                      color=\"primary\"\n                      disableElevation\n                      onClick={() => {\n                        dispatch(\n                          modalActions.openModal({\n                            width: \"500px\",\n                            type: MODAL.CONFIRMATION_FORM,\n                            data: {\n                              id: product._id,\n                              type: MODAL.DELETE_PRODUCT,\n                              heading: \"Delete Product\",\n                              message:\n                                \"Do you really want to delete this Product?\",\n                            },\n                          })\n                        );\n                      }}\n                      sx={{ minWidth: \"auto\" }}\n                    >\n                      <BsTrashFill />\n                    </Button>\n                    <Button\n                      // size=\"small\"\n                      variant=\"contained\"\n                      color=\"secondary\"\n                      disableElevation\n                      onClick={() => navigate(`/update-product/${product._id}`)}\n                      sx={{ minWidth: \"auto\" }}\n                    >\n                      <AiOutlineEdit />\n                    </Button>\n                  </Stack>\n                </StyledTableCell>\n              </StyledTableRow>\n            ))}\n          </TableBody>\n        </TableLoadingWrapper>\n      </Table>\n    </TableContainer>\n  );\n}\n","import { Container, Stack } from \"@mui/material\";\nimport Button from \"components/atoms/Button\";\nimport Banner from \"components/templates/Banner\";\nimport BasicCard from \"components/templates/BasicCard\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useAppSelector } from \"redux/hooks\";\nimport ProductFilters from \"./ProductFilters\";\nimport ProductsList from \"./ProductsList\";\n\nexport default function ProductManagement() {\n  const products = useAppSelector((state) => state.product.products);\n\n  const navigate = useNavigate();\n  return (\n    <Container maxWidth=\"lg\">\n      <Banner heading={`Product Management (${products.length})`}>\n        <Stack direction=\"row\" spacing={2}>\n          <Button color=\"secondary\" variant=\"contained\">\n            Export\n          </Button>\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={() => navigate(\"/add-product\")}\n          >\n            + Add New\n          </Button>\n        </Stack>\n      </Banner>\n      <BasicCard>\n        <ProductFilters />\n      </BasicCard>\n      <BasicCard>\n        <ProductsList />\n      </BasicCard>\n    </Container>\n  );\n}\n","import { formLoaderActions } from \"./../redux/slices/formLoader/formLoaderSlice\";\nimport { modalActions } from \"./../redux/slices/modal/modalSlice\";\nimport http from \"./http.service\";\nimport { AppDispatch } from \"redux/store\";\nimport Promisable from \"./promisable.service\";\nimport { categoryActions } from \"redux/slices/category/categorySlice\";\nimport { NavigateFunction } from \"react-router-dom\";\n\nconst url = \"/categories\";\n\nconst CategoriesService = {\n  getCategorybyID: async (id: any, dispatch?: AppDispatch) => {\n    dispatch?.(formLoaderActions.setLoading(true));\n\n    http.setJWT();\n\n    const [success, error]: any = await Promisable.asPromise(\n      http.get(`${url}/${id}`)\n    );\n\n    if (success) {\n      const { category } = success.data.data;\n      dispatch?.(categoryActions.setCategory(category));\n    }\n\n    dispatch?.(formLoaderActions.setLoading(false));\n\n    return [success, error];\n  },\n  getCategories: async (data: any, dispatch?: AppDispatch) => {\n    dispatch?.(categoryActions.setLoading(true));\n\n    http.setJWT();\n\n    const [success, error]: any = await Promisable.asPromise(\n      http.post(`${url}/filter`, data)\n    );\n\n    if (success) {\n      const categories = success.data.data;\n\n      dispatch?.(categoryActions.setCategories(categories));\n    }\n\n    dispatch?.(categoryActions.setLoading(false));\n\n    return [success, error];\n  },\n\n  addCategory: async (\n    data: any,\n    dispatch?: AppDispatch,\n    navigate?: NavigateFunction\n  ) => {\n    dispatch?.(formLoaderActions.setLoading(true));\n\n    http.setJWT();\n\n    const [success, error]: any = await Promisable.asPromise(\n      http.post(`${url}`, data)\n    );\n\n    if (success) {\n      const category = success.data.data;\n      dispatch?.(categoryActions.addCategory(category));\n\n      navigate?.(\"/category-management\");\n    }\n\n    dispatch?.(formLoaderActions.setLoading(false));\n\n    return [success, error];\n  },\n\n  deleteCategory: async (id: any, dispatch?: AppDispatch) => {\n    dispatch?.(modalActions.setLoading(true));\n\n    http.setJWT();\n\n    const [success, error]: any = await Promisable.asPromise(\n      http.delete(`${url}/${id}`)\n    );\n\n    if (success) {\n      dispatch?.(modalActions.closeModal());\n      dispatch?.(categoryActions.filterCategory(id));\n    }\n\n    dispatch?.(modalActions.setLoading(false));\n\n    return [success, error];\n  },\n\n  updateCategory: async (\n    id: string,\n    data: any,\n    dispatch?: AppDispatch,\n    navigate?: NavigateFunction\n  ) => {\n    dispatch?.(formLoaderActions.setLoading(true));\n    http.setJWT();\n    const [success, error]: any = await Promisable.asPromise(\n      http.put(`${url}/${id}`, data)\n    );\n    if (success) {\n      const { category } = success.data.data;\n      dispatch?.(categoryActions.updateCategory({ id, category }));\n      navigate?.(\"/category-management\");\n    }\n    dispatch?.(formLoaderActions.setLoading(false));\n    return [success, error];\n  },\n};\n\nexport default CategoriesService;\n","import http from \"./http.service\";\nimport { AppDispatch } from \"redux/store\";\nimport { productActions } from \"redux/slices/product/productSlice\";\nimport Promisable from \"./promisable.service\";\nimport { NavigateFunction } from \"react-router-dom\";\nimport { modalActions } from \"redux/slices/modal\";\nimport { formLoaderActions } from \"redux/slices/formLoader\";\n\nconst url = \"/product\";\n\nconst ProductsService = {\n  getProductbyID: async (id: any, dispatch?: AppDispatch) => {\n    dispatch?.(formLoaderActions.setLoading(true));\n\n    http.setJWT();\n\n    const [success, error]: any = await Promisable.asPromise(\n      http.get(`${url}/${id}`)\n    );\n\n    if (success) {\n      const { product } = success.data.data;\n      dispatch?.(productActions.setProduct(product));\n    }\n\n    dispatch?.(formLoaderActions.setLoading(false));\n\n    return [success, error];\n  },\n  getProducts: async (data: any, dispatch?: AppDispatch) => {\n    dispatch?.(productActions.setLoading(true));\n\n    http.setJWT();\n\n    const [success, error]: any = await Promisable.asPromise(\n      http.post(`${url}/filter`, data)\n    );\n\n    if (success) {\n      const { products } = success.data.data;\n      dispatch?.(productActions.setProducts(products));\n    }\n\n    dispatch?.(productActions.setLoading(false));\n\n    return [success, error];\n  },\n\n  addProduct: async (\n    data: any,\n    dispatch?: AppDispatch,\n    navigate?: NavigateFunction\n  ) => {\n    dispatch?.(formLoaderActions.setLoading(true));\n    http.setJWT();\n    const [success, error]: any = await Promisable.asPromise(\n      http.post(`${url}`, data)\n    );\n    if (success) {\n      const product = success.data.data.product;\n      dispatch?.(productActions.addProduct(product));\n      navigate?.(\"/product-management\");\n    }\n    dispatch?.(formLoaderActions.setLoading(false));\n    return [success, error];\n  },\n\n  updateProduct: async (id: string, data: any, dispatch?: AppDispatch) => {\n    dispatch?.(formLoaderActions.setLoading(true));\n    dispatch?.(modalActions.setLoading(true));\n    http.setJWT();\n    const [success, error]: any = await Promisable.asPromise(\n      http.put(`${url}/${id}`, data)\n    );\n    if (success) {\n      const product = success.data.data.updated_product;\n      dispatch?.(productActions.updateProduct(product));\n      dispatch?.(productActions.setShow(\"list\"));\n      dispatch?.(modalActions.closeModal());\n    }\n    dispatch?.(formLoaderActions.setLoading(false));\n    dispatch?.(modalActions.setLoading(false));\n    return [success, error];\n  },\n\n  deleteProduct: async (id: any, dispatch?: AppDispatch) => {\n    dispatch?.(modalActions.setLoading(true));\n\n    http.setJWT();\n\n    const [success, error]: any = await Promisable.asPromise(\n      http.delete(`${url}/${id}`)\n    );\n\n    if (success) {\n      dispatch?.(modalActions.closeModal());\n      dispatch?.(productActions.deleteProduct(id));\n    }\n    dispatch?.(modalActions.setLoading(false));\n    return [success, error];\n  },\n};\n\nexport default ProductsService;\n"],"names":["SelectCategories","props","dispatch","useAppDispatch","categoriesOptions","useAppSelector","state","category","useEffect","CategoriesService","SelectRedux","options","ProductFilters","form","FiltersForm","onSubmit","values","data","pageSize","Number","productActions","filters","myFields","fields","onClickReset","reset","name","label","component","InputRedux","cellProps","md","SelectProps","value","ProductsList","navigate","useNavigate","products","product","loading","filter","refreshLoader","ProductsService","TableContainer","Table","sx","minWidth","borderSpacing","borderBottomWidth","borderCollapse","TableLoadingWrapper","container","coloumns","length","message","TableHead","TableRow","TableBody","map","i","_id","is_published","align","Stack","direction","spacing","justifyContent","Button","variant","color","disableElevation","onClick","modalActions","width","type","MODAL","id","heading","ProductManagement","Container","maxWidth","Banner","BasicCard","url","getCategorybyID","formLoaderActions","http","Promisable","success","error","categoryActions","getCategories","categories","addCategory","deleteCategory","updateCategory","getProductbyID","getProducts","addProduct","updateProduct","updated_product","deleteProduct"],"sourceRoot":""}