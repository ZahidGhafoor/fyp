{"version":3,"file":"static/js/7561.01112d39.chunk.js","mappings":"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","sources":["components/atoms/BaseCheckbox/BaseCheckbox.tsx","components/molecules/CheckboxRedux/CheckboxRedux.tsx","components/atoms/FileUpload/FileUpload.tsx","services/image.service.ts","components/molecules/FileUploadRedux/FileUploadRedux.tsx","components/organisms/ReduxFieldArrayTranslation/ReduxFieldArrayTranslation.tsx","pages/AddCategory/AddCategoryForm/AddCategoryForm.tsx","pages/AddCategory/AddCategoryForm/index.ts","pages/AddCategory/UpdateCategoryForm/UpdateCategoryForm.tsx","pages/AddCategory/AddCategory.tsx","services/categories.service.ts"],"sourcesContent":["import { CheckBoxProps } from \".\";\nimport { Checkbox, FormControlLabel } from \"@mui/material\";\n\nexport default function BaseCheckbox({\n\tlabel,\n\tFormControlLabelProps,\n\t...rest\n}: CheckBoxProps) {\n\treturn (\n\t\t<FormControlLabel\n\t\t\tcontrol={<Checkbox {...rest} />}\n\t\t\t{...FormControlLabelProps}\n\t\t\tlabel={label}\n\t\t/>\n\t);\n}\n","import BaseCheckbox from \"components/atoms/BaseCheckbox\";\nexport default function CheckboxRedux({\n\tinput,\n\thandleBlur,\n\thandleFocus,\n\tCheckBoxProps,\n\t...rest\n}: any) {\n\treturn (\n\t\t<BaseCheckbox\n\t\t\t{...CheckBoxProps}\n\t\t\t{...rest}\n\t\t\t{...input}\n\t\t\tchecked={input.value === true}\n\t\t\tonBlur={(e) => {\n\t\t\t\thandleBlur?.(e);\n\t\t\t\te.preventDefault();\n\t\t\t}}\n\t\t\tonFocus={(e) => {\n\t\t\t\thandleFocus?.(e);\n\t\t\t\te.preventDefault();\n\t\t\t}}\n\t\t/>\n\t);\n}\n","import Input from \"../Input\";\nimport { FileUploadProps } from \".\";\nimport ToasterService from \"utils/toaster.util\";\n\nexport default function FileUpload({\n\tvalue,\n\taccept,\n\tmaxSize,\n\tonChange,\n\t...rest\n}: FileUploadProps) {\n\treturn (\n\t\t<Input\n\t\t\t{...rest}\n\t\t\ttype=\"file\"\n\t\t\tinputProps={{ accept, ...rest.inputProps }}\n\t\t\tInputLabelProps={{ shrink: true, ...rest.InputLabelProps }}\n\t\t\tonChange={(e: any) => {\n\t\t\t\tlet file = e.target.files?.[0];\n\t\t\t\tif (!file) return onChange?.(file);\n\t\t\t\tif (accept) {\n\t\t\t\t\tlet types = file.name.split(\".\");\n\t\t\t\t\tlet type = types[types.length - 1].toLowerCase();\n\t\t\t\t\tif (!accept.includes(`.${type}`)) {\n\t\t\t\t\t\tToasterService.showError(`${type} not allowed!`);\n\t\t\t\t\t\tlet error: any = { error: `${type} not allowed!` };\n\t\t\t\t\t\treturn onChange?.(error);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (maxSize) {\n\t\t\t\t\tlet size = maxSize * 1024 * 1024;\n\t\t\t\t\tif (file.size > size) {\n\t\t\t\t\t\tToasterService.showError(`Max file size is ${maxSize} MB`);\n\t\t\t\t\t\tlet error: any = { error: `Max file size is ${maxSize} MB` };\n\t\t\t\t\t\treturn onChange?.(error);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tonChange?.(file);\n\t\t\t}}\n\t\t/>\n\t);\n}\n","import { formLoaderActions } from \"redux/slices/formLoader\";\nimport { modalActions } from \"redux/slices/modal\";\nimport { AppDispatch } from \"redux/store\";\nimport http from \"./http.service\";\nimport Promisable from \"./promisable.service\";\n\nconst url = \"/upload\";\n\nconst ImageService = {\n  upload: async (data: any, dispatch?: AppDispatch) => {\n    dispatch?.(formLoaderActions.setLoading(true));\n\n    http.setJWT();\n    http.setMultiPart();\n\n    const [success, error]: any = await Promisable.asPromise(\n      http.post(`${url}`, data)\n    );\n\n    dispatch?.(formLoaderActions.setLoading(false));\n\n    return [success, error];\n  },\n};\n\nexport default ImageService;\n","import CircleLoader from \"components/atoms/CircleLoader\";\nimport FileUpload from \"components/atoms/FileUpload\";\nimport { useAppDispatch, useAppSelector } from \"redux/hooks\";\nimport ImageService from \"services/image.service\";\n\nexport default function FileUploadRedux({\n  input,\n  handleBlur,\n  handleFocus,\n  FileUploadProps,\n  meta: { error, touched, invalid },\n  ...rest\n}: any) {\n  const dispatch = useAppDispatch();\n\n  return (\n    <FileUpload\n      {...FileUploadProps}\n      {...rest}\n      {...input}\n      helperText={touched && invalid && error}\n      error={touched && invalid && error && true}\n      onChange={async (file: any) => {\n        if (file) {\n          if (file.error) return input.onChange(file);\n\n          const formData = new FormData();\n\n          formData.append(\"file\", file);\n\n          const [success] = await ImageService.upload(formData, dispatch);\n          if (success) {\n            const images = success.data.data;\n\n            input.onChange({\n              images,\n              name: file.name,\n              type: file.type,\n              blob: URL.createObjectURL(file),\n            });\n          } else input.onChange(\"\");\n        } else input.onChange(\"\");\n      }}\n      onBlur={(e) => {\n        handleBlur?.(e);\n        e.preventDefault();\n      }}\n      onFocus={(e) => {\n        handleFocus?.(e);\n        e.preventDefault();\n      }}\n    />\n  );\n}\n","import { Fragment, useEffect } from \"react\";\nimport ReduxFormFields, {\n  languageMapper,\n  LanguageType,\n} from \"components/molecules/ReduxFormFields\";\n\nexport default function ReduxFieldArrayTranslation({\n  fields,\n  fieldsArray,\n  FieldsProps,\n}: any) {\n  useEffect(() => {\n    const languages: LanguageType[] = FieldsProps?.languages || [\n      \"en\",\n      \"de\",\n      \"tr\",\n    ];\n    languages.forEach((lang) => {\n      fields.push({ lang });\n    });\n  }, []);\n\n  return (\n    <>\n      {fields.map((member: string, index: number) => (\n        <Fragment key={index}>\n          {FieldsProps?.showLabelInHeading && (\n            <h3>{languageMapper[fields.get(index).lang as LanguageType]}</h3>\n          )}\n          <ReduxFormFields\n            member={member}\n            fields={\n              FieldsProps?.showLabelInHeading\n                ? [...fieldsArray]\n                : fieldsArray.map((el: any) => {\n                    if (el.name === \"translation\")\n                      return {\n                        ...el,\n                        label: `${el.label} (${\n                          languageMapper[fields.get(index).lang as LanguageType]\n                        })`,\n                      };\n\n                    return el;\n                  })\n            }\n          />\n        </Fragment>\n      ))}\n    </>\n  );\n}\n","import Button from \"components/atoms/Button\";\nimport ReduxFormFields from \"components/molecules/ReduxFormFields\";\nimport { reduxForm } from \"redux-form\";\nimport { fields } from \".\";\n\nconst AddCategoryForm = ({ handleSubmit }: any) => {\n  return (\n    <form onSubmit={handleSubmit}>\n      <ReduxFormFields fields={fields} />\n      <br />\n      <Button color=\"primary\" variant=\"contained\" type=\"submit\">\n        Submit\n      </Button>\n    </form>\n  );\n};\n\nexport default reduxForm({\n  form: \"AddCategoryForm\",\n})(AddCategoryForm);\n","import { file } from \"./../../../utils/validate.util\";\nimport { required, number } from \"utils/validate.util\";\nimport CheckboxRedux from \"components/molecules/CheckboxRedux\";\nimport FileUploadRedux from \"components/molecules/FileUploadRedux\";\nimport InputRedux from \"components/molecules/InputRedux\";\nimport { ReduxFormField } from \"components/molecules/ReduxFormFields\";\nimport ReduxFieldArrayTranslation from \"components/organisms/ReduxFieldArrayTranslation\";\n\nexport { default } from \"./AddCategoryForm\";\n\nexport const fields: ReduxFormField[] = [\n  {\n    label: \"Is Active\",\n    name: \"isActive\",\n    component: CheckboxRedux,\n    cellProps: { md: 12 },\n  },\n  {\n    label: \"Display Order\",\n    name: \"displayOrder\",\n    component: InputRedux,\n    validate: [required, number],\n    cellProps: { md: 6 },\n  },\n  {\n    label: \"Small Image (327x378 - jpg)\",\n    name: \"smallImage\",\n    component: FileUploadRedux,\n    cellProps: { md: 6 },\n    FileUploadProps: {\n      maxSize: 5,\n      accept: [\".jpg\", \".jpeg\", \".png\"],\n    },\n    validate: [required, file],\n  },\n  {\n    label: \"Large Image (662x378  - jpg)\",\n    name: \"largeImage\",\n    component: FileUploadRedux,\n    cellProps: { md: 6 },\n    FileUploadProps: {\n      maxSize: 5,\n      accept: [\".jpg\", \".jpeg\", \".png\"],\n    },\n    validate: [required, file],\n  },\n  {\n    name: \"translations\",\n    label: \"Translations\",\n    reduxFormComponent: \"FieldArray\",\n    component: ReduxFieldArrayTranslation,\n    fieldsArray: [\n      {\n        label: \"Name\",\n        name: \"translation\",\n        component: InputRedux,\n        cellProps: { md: 12 },\n        validate: [required],\n      },\n    ],\n  },\n];\n","import { useEffect } from \"react\";\nimport { change } from \"redux-form\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useAppDispatch, useAppSelector } from \"redux/hooks\";\nimport CategoriesService from \"services/categories.service\";\nimport { categoryActions } from \"redux/slices/category/categorySlice\";\n\nexport default function UpdateCategoryForm({ id }: any) {\n  const form = \"AddCategoryForm\";\n  const navigate = useNavigate();\n  const dispatch = useAppDispatch();\n  const category = useAppSelector((state) => state.category.category);\n\n  useEffect(() => {\n    CategoriesService.getCategorybyID(`${id}`, dispatch);\n    return () => {\n      dispatch(categoryActions.setCategory(null));\n    };\n  }, [id, dispatch]);\n\n  useEffect(() => {\n    if (!category || category?.data === \"Not Found\") return;\n\n    const { isActive, displayOrder, smallImage, largeImage, translations } =\n      category;\n\n    dispatch(change(form, \"isActive\", isActive));\n    dispatch(change(form, \"displayOrder\", displayOrder));\n    dispatch(change(form, \"smallImage\", { images: [{ path: smallImage }] }));\n    dispatch(change(form, \"largeImage\", { images: [{ path: largeImage }] }));\n    dispatch(\n      change(\n        form,\n        \"translations\",\n        translations.map(({ _id, ...rest }: any) => ({ ...rest }))\n      )\n    );\n  }, [category, navigate, dispatch]);\n\n  return null;\n}\n","import { Container } from \"@mui/material\";\nimport CircleLoader from \"components/atoms/CircleLoader\";\nimport GoBack from \"components/atoms/GoBack\";\nimport Banner from \"components/templates/Banner\";\nimport BasicCard from \"components/templates/BasicCard\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { useAppDispatch, useAppSelector } from \"redux/hooks\";\nimport CategoriesService from \"services/categories.service\";\nimport AddCategoryForm from \"./AddCategoryForm\";\nimport UpdateCategoryForm from \"./UpdateCategoryForm\";\n\nexport default function AddCategory() {\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n  const { id } = useParams();\n\n  const loading = useAppSelector((state) => state.formLoader.loading);\n\n  const handleSubmit = (values: any) => {\n    let data = { ...values };\n\n    data.smallImage = data.smallImage.images[0].path;\n    data.largeImage = data.largeImage.images[0].path;\n\n    if (id) CategoriesService.updateCategory(`${id}`, data, dispatch, navigate);\n    else CategoriesService.addCategory(data, dispatch, navigate);\n  };\n\n  return (\n    <Container maxWidth=\"lg\">\n      <GoBack path=\"/category-management\" title=\"Categories\" />\n      <Banner heading={`${id ? \"Update\" : \"Add New\"} Category`}></Banner>\n      <div style={{ position: \"relative\" }}>\n        {loading && <CircleLoader />}\n        <BasicCard>\n          <AddCategoryForm onSubmit={handleSubmit} />\n          {id && <UpdateCategoryForm id={id} />}\n        </BasicCard>\n      </div>\n    </Container>\n  );\n}\n","import { formLoaderActions } from \"./../redux/slices/formLoader/formLoaderSlice\";\nimport { modalActions } from \"./../redux/slices/modal/modalSlice\";\nimport http from \"./http.service\";\nimport { AppDispatch } from \"redux/store\";\nimport Promisable from \"./promisable.service\";\nimport { categoryActions } from \"redux/slices/category/categorySlice\";\nimport { NavigateFunction } from \"react-router-dom\";\n\nconst url = \"/categories\";\n\nconst CategoriesService = {\n  getCategorybyID: async (id: any, dispatch?: AppDispatch) => {\n    dispatch?.(formLoaderActions.setLoading(true));\n\n    http.setJWT();\n\n    const [success, error]: any = await Promisable.asPromise(\n      http.get(`${url}/${id}`)\n    );\n\n    if (success) {\n      const { category } = success.data.data;\n      dispatch?.(categoryActions.setCategory(category));\n    }\n\n    dispatch?.(formLoaderActions.setLoading(false));\n\n    return [success, error];\n  },\n  getCategories: async (data: any, dispatch?: AppDispatch) => {\n    dispatch?.(categoryActions.setLoading(true));\n\n    http.setJWT();\n\n    const [success, error]: any = await Promisable.asPromise(\n      http.post(`${url}/filter`, data)\n    );\n\n    if (success) {\n      const categories = success.data.data;\n\n      dispatch?.(categoryActions.setCategories(categories));\n    }\n\n    dispatch?.(categoryActions.setLoading(false));\n\n    return [success, error];\n  },\n\n  addCategory: async (\n    data: any,\n    dispatch?: AppDispatch,\n    navigate?: NavigateFunction\n  ) => {\n    dispatch?.(formLoaderActions.setLoading(true));\n\n    http.setJWT();\n\n    const [success, error]: any = await Promisable.asPromise(\n      http.post(`${url}`, data)\n    );\n\n    if (success) {\n      const category = success.data.data;\n      dispatch?.(categoryActions.addCategory(category));\n\n      navigate?.(\"/category-management\");\n    }\n\n    dispatch?.(formLoaderActions.setLoading(false));\n\n    return [success, error];\n  },\n\n  deleteCategory: async (id: any, dispatch?: AppDispatch) => {\n    dispatch?.(modalActions.setLoading(true));\n\n    http.setJWT();\n\n    const [success, error]: any = await Promisable.asPromise(\n      http.delete(`${url}/${id}`)\n    );\n\n    if (success) {\n      dispatch?.(modalActions.closeModal());\n      dispatch?.(categoryActions.filterCategory(id));\n    }\n\n    dispatch?.(modalActions.setLoading(false));\n\n    return [success, error];\n  },\n\n  updateCategory: async (\n    id: string,\n    data: any,\n    dispatch?: AppDispatch,\n    navigate?: NavigateFunction\n  ) => {\n    dispatch?.(formLoaderActions.setLoading(true));\n    http.setJWT();\n    const [success, error]: any = await Promisable.asPromise(\n      http.put(`${url}/${id}`, data)\n    );\n    if (success) {\n      const { category } = success.data.data;\n      dispatch?.(categoryActions.updateCategory({ id, category }));\n      navigate?.(\"/category-management\");\n    }\n    dispatch?.(formLoaderActions.setLoading(false));\n    return [success, error];\n  },\n};\n\nexport default CategoriesService;\n"],"names":["BaseCheckbox","label","FormControlLabelProps","rest","FormControlLabel","control","Checkbox","CheckboxRedux","input","handleBlur","handleFocus","CheckBoxProps","checked","value","onBlur","e","preventDefault","onFocus","FileUpload","accept","maxSize","onChange","Input","type","inputProps","InputLabelProps","shrink","file","target","files","types","name","split","length","toLowerCase","includes","ToasterService","error","size","ImageService","upload","data","dispatch","formLoaderActions","http","Promisable","success","FileUploadRedux","FileUploadProps","meta","touched","invalid","useAppDispatch","helperText","formData","FormData","append","images","blob","URL","createObjectURL","ReduxFieldArrayTranslation","fields","fieldsArray","FieldsProps","useEffect","languages","forEach","lang","push","map","member","index","Fragment","showLabelInHeading","languageMapper","get","ReduxFormFields","el","reduxForm","form","handleSubmit","onSubmit","Button","color","variant","component","cellProps","md","InputRedux","validate","required","number","reduxFormComponent","UpdateCategoryForm","id","navigate","useNavigate","category","useAppSelector","state","CategoriesService","categoryActions","isActive","displayOrder","smallImage","largeImage","translations","change","path","_id","AddCategory","useParams","loading","formLoader","Container","maxWidth","GoBack","title","Banner","heading","style","position","CircleLoader","BasicCard","values","url","getCategorybyID","getCategories","categories","addCategory","deleteCategory","modalActions","updateCategory"],"sourceRoot":""}