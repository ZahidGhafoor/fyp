{"version":3,"file":"static/js/7740.0e711132.chunk.js","mappings":"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","sources":["components/templates/Tabs/Tabs.tsx","pages/ZipcodeRequestManagement/MostRequestedZipCodes/MostRequestedZipCodesList/MostRequestedZipCodesList.tsx","pages/ZipcodeRequestManagement/MostRequestedZipCodes/MostRequestedZipCodes.tsx","pages/ZipcodeRequestManagement/ZipCodeRequests/ZipCodeRequestsFilters/ZipCodeRequestsFilter.tsx","pages/ZipcodeRequestManagement/ZipCodeRequests/ZipCodeRequestsFilters/index.ts","pages/ZipcodeRequestManagement/ZipCodeRequests/ZipCodeRequestsList/ZipCodeRequestsList.tsx","pages/ZipcodeRequestManagement/ZipCodeRequests/ZipCodeRequests.tsx","pages/ZipcodeRequestManagement/ZipcodeRequestManagement.tsx","services/zipcode.service.ts"],"sourcesContent":["import { TabPanelProps, TabsProps } from \".\";\nimport ReplayIcon from \"@mui/icons-material/Replay\";\nimport {\n\tBox,\n\tIconButton,\n\tTab,\n\tTabs as BaseTabs,\n\tTypography,\n} from \"@mui/material\";\n\nfunction a11yProps(index: number) {\n\treturn {\n\t\tid: `simple-tab-${index}`,\n\t\t\"aria-controls\": `simple-tabpanel-${index}`,\n\t};\n}\n\nfunction TabPanel(props: TabPanelProps) {\n\tconst { children, value, index, ...other } = props;\n\n\treturn (\n\t\t<div\n\t\t\trole=\"tabpanel\"\n\t\t\thidden={value !== index}\n\t\t\tid={`simple-tabpanel-${index}`}\n\t\t\taria-labelledby={`simple-tab-${index}`}\n\t\t\t{...other}\n\t\t>\n\t\t\t{value === index && (\n\t\t\t\t<Box sx={{ pt: 2, pb: 2 }}>\n\t\t\t\t\t<Typography component={\"div\"}>{children}</Typography>\n\t\t\t\t</Box>\n\t\t\t)}\n\t\t</div>\n\t);\n}\n\nexport default function Tabs({\n\tvalue,\n\ttabs,\n\tonChange,\n\tonRefresh,\n\tshowRefresh,\n}: TabsProps) {\n\treturn (\n\t\t<div style={{ position: \"relative\" }}>\n\t\t\t{showRefresh && (\n\t\t\t\t<IconButton\n\t\t\t\t\tedge=\"end\"\n\t\t\t\t\taria-label=\"refresh\"\n\t\t\t\t\tonClick={() => onRefresh?.()}\n\t\t\t\t\tsx={{\n\t\t\t\t\t\tzIndex: 2,\n\t\t\t\t\t\ttop: \"5px\",\n\t\t\t\t\t\tright: \"12px\",\n\t\t\t\t\t\tcursor: \"pointer\",\n\t\t\t\t\t\tposition: \"absolute\",\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<ReplayIcon color=\"primary\" />\n\t\t\t\t</IconButton>\n\t\t\t)}\n\t\t\t<Box\n\t\t\t\tsx={{\n\t\t\t\t\tborderBottom: 1,\n\t\t\t\t\tborderColor: \"divider\",\n\t\t\t\t\t\"& .MuiButtonBase-root\": {\n\t\t\t\t\t\tpadding: \"6px 12px\",\n\t\t\t\t\t\tminWidth: \"unset\",\n\t\t\t\t\t},\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<BaseTabs\n\t\t\t\t\tvalue={value}\n\t\t\t\t\tonChange={(_e, tab) => onChange(tab)}\n\t\t\t\t\taria-label=\"basic tabs example\"\n\t\t\t\t>\n\t\t\t\t\t{tabs.map(({ label }: any, index: any) => (\n\t\t\t\t\t\t<Tab\n\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\tlabel={label}\n\t\t\t\t\t\t\tsx={{ textTransform: \"capitalize\" }}\n\t\t\t\t\t\t\t{...a11yProps(index)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t))}\n\t\t\t\t</BaseTabs>\n\t\t\t</Box>\n\n\t\t\t{tabs.map(({ element }: any, index: number) => (\n\t\t\t\t<TabPanel value={value} index={index} key={index}>\n\t\t\t\t\t{element}\n\t\t\t\t</TabPanel>\n\t\t\t))}\n\t\t</div>\n\t);\n}\n","import { StyledTableCell, StyledTableRow } from \"components/templates/Tables\";\nimport {\n  Table,\n  TableRow,\n  TableBody,\n  TableHead,\n  TableContainer,\n} from \"@mui/material\";\nimport TableLoadingWrapper from \"components/templates/TableLoadingWrapper\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useAppDispatch, useAppSelector } from \"redux/hooks\";\nimport ZipCodeService from \"services/zipcode.service\";\nimport { useEffect } from \"react\";\n\nconst MostRequestedZipCodesList = () => {\n  const navigate = useNavigate();\n  const dispatch = useAppDispatch();\n  const loading = useAppSelector((state) => state.zipcode.loading);\n  const mostRequestedzipcodes = useAppSelector(\n    (state) => state.zipcode.mostRequestedZipCodes\n  );\n  // const filter = useAppSelector((state) => state.zipcode.filter);\n\n  console.log(\"our bje are ======\", mostRequestedzipcodes);\n  useEffect(() => {\n    ZipCodeService.getMostRequestedZipCodes(dispatch);\n  }, [dispatch]);\n\n  return (\n    <div>\n      <TableContainer>\n        <Table\n          aria-label=\"customized table\"\n          sx={{\n            minWidth: \"100%\",\n            borderSpacing: \"0 10px\",\n            borderBottomWidth: \"0px\",\n            borderCollapse: \"separate\",\n          }}\n        >\n          <TableLoadingWrapper\n            container\n            coloumns={2}\n            loading={loading}\n            message=\"No most requested zip codes available\"\n            length={mostRequestedzipcodes.length}\n          >\n            <TableHead>\n              <TableRow>\n                <StyledTableCell>Zipcode</StyledTableCell>\n                <StyledTableCell>Count</StyledTableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {mostRequestedzipcodes.map((mostZipcode: any, index: any) => (\n                <StyledTableRow key={index}>\n                  <StyledTableCell>{mostZipcode._id}</StyledTableCell>\n                  <StyledTableCell>{mostZipcode.count}</StyledTableCell>\n                </StyledTableRow>\n              ))}\n            </TableBody>\n          </TableLoadingWrapper>\n        </Table>\n      </TableContainer>\n    </div>\n  );\n};\n\nexport default MostRequestedZipCodesList;\n","import BasicCard from \"components/templates/BasicCard\";\nimport MostRequestedZipCodesList from \"./MostRequestedZipCodesList\";\n\nexport default function MostRequestedZipCodes() {\n  return (\n    <div>\n      <BasicCard>\n        <MostRequestedZipCodesList />\n      </BasicCard>\n    </div>\n  );\n}\n","import { fields } from \".\";\n\nimport FiltersForm from 'components/templates/FiltersForm';\n\nexport default function ZipCodeRequestsFilter() {\n    const handleSubmit = (values: any) => {};\n\n    return <FiltersForm onSubmit={handleSubmit} myFields={fields} />;\n}\n\n","import InputRedux from \"components/molecules/InputRedux\";\nimport { ReduxFormField } from \"components/molecules/ReduxFormFields\";\n\nexport { default } from \"./ZipCodeRequestsFilter\";\n\nexport const fields: ReduxFormField[] = [\n  {\n    label: \"Page Size\",\n    name: \"page_size\",\n    component: InputRedux,\n    cellProps: { md: 4 },\n  },\n];\n","import { StyledTableCell, StyledTableRow } from \"components/templates/Tables\";\nimport {\n  Table,\n  TableRow,\n  TableBody,\n  TableHead,\n  TableContainer,\n} from \"@mui/material\";\nimport TableLoadingWrapper from \"components/templates/TableLoadingWrapper\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useAppDispatch, useAppSelector } from \"redux/hooks\";\nimport ZipCodeService from \"services/zipcode.service\";\nimport { useEffect } from \"react\";\nimport DateService from \"utils/date.util\";\n\nconst ZipCodeRequestsList = () => {\n  const navigate = useNavigate();\n  const dispatch = useAppDispatch();\n  const loading = useAppSelector((state) => state.zipcode.loading);\n  const zipcodesReqest = useAppSelector(\n    (state) => state.zipcode.zipCodesRequest\n  );\n  // const filter = useAppSelector((state) => state.zipcode.filter);\n\n  useEffect(() => {\n    ZipCodeService.getZipCodesRequest(dispatch);\n  }, [dispatch]);\n\n  return (\n    <div>\n      <TableContainer>\n        <Table\n          aria-label=\"customized table\"\n          sx={{\n            minWidth: \"100%\",\n            borderSpacing: \"0 10px\",\n            borderBottomWidth: \"0px\",\n            borderCollapse: \"separate\",\n          }}\n        >\n          <TableLoadingWrapper\n            container\n            coloumns={3}\n            loading={loading}\n            message=\"No zip code requests available\"\n            length={zipcodesReqest.length}\n          >\n            <TableHead>\n              <TableRow>\n                <StyledTableCell>Email</StyledTableCell>\n                <StyledTableCell>Zipcode</StyledTableCell>\n                <StyledTableCell>Count</StyledTableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {zipcodesReqest.map((zipcode: any, index: any) => (\n                <StyledTableRow key={index}>\n                  <StyledTableCell>{zipcode._id.email}</StyledTableCell>\n                  <StyledTableCell>{zipcode._id.zipcode}</StyledTableCell>\n                  <StyledTableCell>{zipcode.count}</StyledTableCell>\n                </StyledTableRow>\n              ))}\n            </TableBody>\n          </TableLoadingWrapper>\n        </Table>\n      </TableContainer>\n    </div>\n  );\n};\n\nexport default ZipCodeRequestsList;\n","import BasicCard from \"components/templates/BasicCard\";\nimport ZipCodeRequestsFilters from \"./ZipCodeRequestsFilters\";\nimport ZipCodeRequestsList from \"./ZipCodeRequestsList\";\n\nexport default function ZipCodeRequests() {\n  return (\n    <div>\n      <BasicCard>\n        <ZipCodeRequestsFilters />\n      </BasicCard>\n      <BasicCard>\n        <ZipCodeRequestsList />\n      </BasicCard>\n    </div>\n  );\n}\n","import { Container } from \"@mui/material\";\nimport Banner from \"components/templates/Banner\";\nimport Tabs from \"components/templates/Tabs\";\nimport { useState } from \"react\";\nimport { useAppSelector } from \"redux/hooks\";\nimport MostRequestedZipCodes from \"./MostRequestedZipCodes\";\nimport ZipCodeRequests from \"./ZipCodeRequests\";\n\nexport default function ZipcodeRequestManagement() {\n  const [tab, setTab] = useState(0);\n  const zipcodesReqest = useAppSelector(\n    (state) => state.zipcode.zipCodesRequest\n  );\n  const mostRequestedzipcodes = useAppSelector(\n    (state) => state.zipcode.mostRequestedZipCodes\n  );\n\n  const getBannerHeading =\n    tab == 0\n      ? `Zipcode Request Management (${zipcodesReqest.length})`\n      : `Most Requested Zipcodes (${mostRequestedzipcodes.length})`;\n\n  return (\n    <div>\n      <Container maxWidth=\"lg\">\n        <Banner heading={getBannerHeading} />\n        <Tabs\n          //   value={tab}\n          //   onChange={(tab) => dispatch(bookingActions.setTab(tab))}\n          value={tab}\n          onChange={(tab) => setTab(tab)}\n          tabs={[\n            {\n              label: \"Zip Code Requests\",\n              element: <ZipCodeRequests />,\n            },\n            {\n              label: \"Most Requested Zip Codes\",\n              element: <MostRequestedZipCodes />,\n            },\n          ]}\n        />\n      </Container>\n    </div>\n  );\n}\n","import { NavigateFunction } from \"react-router-dom\";\nimport { zipcodeActions } from \"./../redux/slices/zipcode/zipcodeSlice\";\nimport http from \"./http.service\";\nimport { AppDispatch } from \"redux/store\";\nimport Promisable from \"./promisable.service\";\nimport { modalActions } from \"redux/slices/modal\";\nimport { formLoaderActions } from \"redux/slices/formLoader\";\n\nconst url = `/zipcode`;\n\nconst ZipCodeService = {\n  getZipCodebyID: async (id: any, dispatch?: AppDispatch) => {\n    dispatch?.(formLoaderActions.setLoading(true));\n\n    http.setJWT();\n\n    const [success, error]: any = await Promisable.asPromise(\n      http.get(`${url}/${id}`)\n    );\n\n    if (success) {\n      const { zipcode } = success.data.data;\n      dispatch?.(zipcodeActions.setZipCode(zipcode));\n    }\n\n    dispatch?.(formLoaderActions.setLoading(false));\n\n    return [success, error];\n  },\n\n  getZipCodes: async (data: any, dispatch?: AppDispatch) => {\n    dispatch?.(zipcodeActions.setLoading(true));\n\n    http.setJWT();\n\n    const [success, error]: any = await Promisable.asPromise(\n      http.post(`${url}/filter`, data)\n    );\n\n    if (success) {\n      const { zipcodes } = success.data.data;\n      dispatch?.(zipcodeActions.setZipCodes(zipcodes));\n    }\n\n    dispatch?.(zipcodeActions.setLoading(false));\n\n    return [success, error];\n  },\n  getZipCodesRequest: async (dispatch?: AppDispatch) => {\n    dispatch?.(zipcodeActions.setLoading(true));\n\n    http.setJWT();\n\n    const [success, error]: any = await Promisable.asPromise(\n      http.get(`${url}/all-requested-zipcodes`)\n    );\n\n    if (success) {\n      const { requestedZipCodes } = success.data.data;\n      dispatch?.(zipcodeActions.setZipCodesRequest(requestedZipCodes));\n    }\n\n    dispatch?.(zipcodeActions.setLoading(false));\n\n    return [success, error];\n  },\n  getMostRequestedZipCodes: async (dispatch?: AppDispatch) => {\n    dispatch?.(zipcodeActions.setLoading(true));\n\n    http.setJWT();\n\n    const [success, error]: any = await Promisable.asPromise(\n      http.get(`${url}/requested-zipcodes-group`)\n    );\n\n    if (success) {\n      const { requestedZipCodes } = success.data.data;\n      dispatch?.(zipcodeActions.setmostRequestZipCodes(requestedZipCodes));\n\n      console.log(\"our bje are ======\", requestedZipCodes);\n    }\n\n    dispatch?.(zipcodeActions.setLoading(false));\n\n    return [success, error];\n  },\n\n  createZipCodes: async (\n    data: any,\n    dispatch?: AppDispatch,\n    navigate?: NavigateFunction\n  ) => {\n    dispatch?.(formLoaderActions.setLoading(true));\n\n    http.setJWT();\n\n    const [success, error]: any = await Promisable.asPromise(\n      http.post(`${url}`, data)\n    );\n\n    if (success) {\n      navigate?.(\"/zip-code-management\");\n    }\n\n    dispatch?.(formLoaderActions.setLoading(false));\n\n    return [success, error];\n  },\n\n  deleteZipCodes: async (id: any, dispatch?: AppDispatch) => {\n    dispatch?.(modalActions.setLoading(true));\n\n    http.setJWT();\n\n    const [success, error]: any = await Promisable.asPromise(\n      http.delete(`${url}/${id}`)\n    );\n\n    if (success) {\n      dispatch?.(modalActions.closeModal());\n      dispatch?.(zipcodeActions.filterZipCode(id));\n    }\n\n    dispatch?.(modalActions.setLoading(false));\n\n    return [success, error];\n  },\n\n  updateZipCode: async (\n    id: string,\n    data: any,\n    dispatch?: AppDispatch,\n    navigate?: NavigateFunction\n  ) => {\n    dispatch?.(formLoaderActions.setLoading(true));\n    http.setJWT();\n    const [success, error]: any = await Promisable.asPromise(\n      http.put(`${url}/${id}`, data)\n    );\n    if (success) {\n      const zipcode = success.data.data;\n      dispatch?.(zipcodeActions.updateZipCode({ id, zipcode }));\n      navigate?.(\"/zip-code-management\");\n    }\n    dispatch?.(formLoaderActions.setLoading(false));\n    return [success, error];\n  },\n};\n\nexport default ZipCodeService;\n"],"names":["TabPanel","props","children","value","index","other","role","hidden","id","Box","sx","pt","pb","Typography","component","Tabs","tabs","onChange","onRefresh","showRefresh","style","position","IconButton","edge","onClick","zIndex","top","right","cursor","Replay","color","borderBottom","borderColor","padding","minWidth","_e","tab","map","label","Tab","textTransform","a11yProps","element","useNavigate","dispatch","useAppDispatch","loading","useAppSelector","state","zipcode","mostRequestedzipcodes","mostRequestedZipCodes","console","log","useEffect","ZipCodeService","TableContainer","Table","borderSpacing","borderBottomWidth","borderCollapse","TableLoadingWrapper","container","coloumns","message","length","TableHead","TableRow","TableBody","mostZipcode","_id","count","MostRequestedZipCodes","BasicCard","ZipCodeRequestsFilter","FiltersForm","onSubmit","values","myFields","fields","name","InputRedux","cellProps","md","zipcodesReqest","zipCodesRequest","email","ZipCodeRequests","ZipcodeRequestManagement","useState","setTab","getBannerHeading","Container","maxWidth","Banner","heading","url","getZipCodebyID","formLoaderActions","http","Promisable","success","error","data","zipcodeActions","getZipCodes","zipcodes","getZipCodesRequest","requestedZipCodes","getMostRequestedZipCodes","createZipCodes","navigate","deleteZipCodes","modalActions","updateZipCode"],"sourceRoot":""}