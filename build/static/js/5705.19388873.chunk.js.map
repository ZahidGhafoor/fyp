{"version":3,"file":"static/js/5705.19388873.chunk.js","mappings":"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","sources":["pages/AddFaqItems/AddFaqItemsForm/AddFaqItemsForm.tsx","pages/AddFaqItems/AddFaqItemsForm/index.ts","pages/AddFaqItems/UpdateFaqItemsForm/AddFaqItemsForm.tsx","pages/AddFaqItems/AddFaqItems.tsx","services/faq.service.ts"],"sourcesContent":["import ReduxFormFields from \"components/molecules/ReduxFormFields\";\nimport { reduxForm } from \"redux-form\";\nimport { fields} from \".\";\nimport Button from \"components/atoms/Button\";\n\n\nconst AddFaqItemsForm = ({ handleSubmit }: any) => {\n  return (\n    <form onSubmit={handleSubmit}>\n      <ReduxFormFields fields={fields} />\n      <br />\n      <Button color=\"primary\" variant=\"contained\" type=\"submit\">\n        Submit\n      </Button>\n    </form>\n  );\n};\n\nexport default reduxForm({\n  form: \"AddFaqItemsForm\",\n})(AddFaqItemsForm);","import InputRedux from \"components/molecules/InputRedux\";\nimport { ReduxFormField } from \"components/molecules/ReduxFormFields\";\nimport { number, required } from \"utils/validate.util\";\n\nexport { default } from \"./AddFaqItemsForm\";\n\nexport const fields: ReduxFormField[] = [\n  {\n    label: \"Question\",\n    name: \"question\",\n    validate: [required],\n\n    component: InputRedux,\n    cellProps: { md: 6 },\n  },\n  {\n    label: \"Answer\",\n    name: \"answer\",\n    component: InputRedux,\n    validate: [required],\n    cellProps: { md: 6 },\n  },\n  {\n    label: \"Display Order\",\n    name: \"displayOrder\",\n    validate: [number],\n    component: InputRedux,\n    cellProps: { md: 6 },\n  },\n];\n","import { useEffect } from \"react\";\nimport { change } from \"redux-form\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useAppDispatch, useAppSelector } from \"redux/hooks\";\nimport FaqService from \"services/faq.service\";\nimport { faqActions } from \"redux/slices/faq/faqSlice\";\n\nexport default function UpdateFaqItemsForm({ id }: any) {\n  const form = \"AddFaqItemsForm\";\n  const navigate = useNavigate();\n  const dispatch = useAppDispatch();\n\n  const faq = useAppSelector((state) => state.faq.faq);\n\n  useEffect(() => {\n    FaqService.getFaqbyID(`${id}`, dispatch);\n    return () => {\n      dispatch(faqActions.setFaq(null));\n    };\n  }, [id, dispatch]);\n\n  useEffect(() => {\n    if (!faq || faq?.data === \"Not Found\") return;\n    const { question, answer, displayOrder } = faq;\n    dispatch(change(form, \"question\", question));\n    dispatch(change(form, \"answer\", answer));\n    dispatch(change(form, \"displayOrder\", displayOrder));\n  }, [faq, navigate, dispatch]);\n\n  return null;\n}","import { Container } from \"@mui/material\";\nimport CircleLoader from \"components/atoms/CircleLoader\";\nimport GoBack from \"components/atoms/GoBack\";\nimport Banner from \"components/templates/Banner\";\nimport BasicCard from \"components/templates/BasicCard\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { useAppDispatch, useAppSelector } from \"redux/hooks\";\nimport FaqService from \"services/faq.service\";\nimport AddFaqItemsForm from \"./AddFaqItemsForm\";\nimport UpdateFaqItemsForm from \"./UpdateFaqItemsForm\";\n\nexport default function AddFaqItems() {\n  const { id } = useParams();\n  const navigate = useNavigate();\n  const dispatch = useAppDispatch();\n  const loading = useAppSelector((state) => state.formLoader.loading);\n  const handleSubmit = (values: any) => {\n    if (id) FaqService.updateFaq(`${id}`, values, dispatch, navigate);\n    else FaqService.createFaq(values, dispatch, navigate);\n  };\n\n  return (\n    <Container maxWidth=\"lg\">\n      <GoBack path=\"/faq-items\" title=\"Faq Items\" />\n      <Banner heading={`${id ? \"Update\" : \"Add\"} Faq Item`}></Banner>\n      <div style={{ position: \"relative\" }}>\n        <BasicCard>\n          {loading && <CircleLoader />}\n          <AddFaqItemsForm onSubmit={handleSubmit} />\n          {id && <UpdateFaqItemsForm id={id} />}\n        </BasicCard>\n      </div>\n    </Container>\n  );\n}\n","import { formLoaderActions } from \"./../redux/slices/formLoader/formLoaderSlice\";\nimport { faqActions } from \"../redux/slices/faq/faqSlice\";\nimport http from \"./http.service\";\nimport { AppDispatch } from \"redux/store\";\nimport Promisable from \"./promisable.service\";\nimport { modalActions } from \"redux/slices/modal\";\nimport { NavigateFunction } from \"react-router-dom\";\n\nconst url = `/FAQ`;\n\nconst FaqService = {\n  getFaqbyID: async (id: any, dispatch?: AppDispatch) => {\n    dispatch?.(formLoaderActions.setLoading(true));\n\n    http.setJWT();\n\n    const [success, error]: any = await Promisable.asPromise(\n      http.get(`${url}/${id}`)\n    );\n\n    if (success) {\n      const { faq } = success.data.data;\n      dispatch?.(faqActions.setFaq(faq));\n    }\n\n    dispatch?.(formLoaderActions.setLoading(false));\n\n    return [success, error];\n  },\n  getFaqs: async (data: any, dispatch?: AppDispatch) => {\n    dispatch?.(faqActions.setLoading(true));\n\n    http.setJWT();\n\n    const [success, error]: any = await Promisable.asPromise(\n      http.post(`${url}/filter`, data)\n    );\n\n    if (success) {\n      const { FAQs } = success.data.data;\n      dispatch?.(faqActions.setFaqs(FAQs));\n    }\n\n    dispatch?.(faqActions.setLoading(false));\n\n    return [success, error];\n  },\n\n  createFaq: async (\n    data: any,\n    dispatch?: AppDispatch,\n    navigate?: NavigateFunction\n  ) => {\n    dispatch?.(modalActions.setLoading(true));\n\n    http.setJWT();\n\n    const [success, error]: any = await Promisable.asPromise(\n      http.post(`${url}`, data)\n    );\n\n    if (success) {\n      navigate?.(\"/faq-items\");\n    }\n\n    dispatch?.(modalActions.setLoading(false));\n\n    return [success, error];\n  },\n\n  deleteFaq: async (id: any, dispatch?: AppDispatch) => {\n    dispatch?.(modalActions.setLoading(true));\n\n    http.setJWT();\n\n    const [success, error]: any = await Promisable.asPromise(\n      http.delete(`${url}/${id}`)\n    );\n\n    if (success) {\n      dispatch?.(modalActions.closeModal());\n      dispatch?.(faqActions.filterfaq(id));\n    }\n\n    dispatch?.(modalActions.setLoading(false));\n\n    return [success, error];\n  },\n\n  updateFaq: async (\n    id: string,\n    data: any,\n    dispatch?: AppDispatch,\n    navigate?: NavigateFunction\n  ) => {\n    dispatch?.(formLoaderActions.setLoading(true));\n    http.setJWT();\n    const [success, error]: any = await Promisable.asPromise(\n      http.put(`${url}/${id}`, data)\n    );\n    if (success) {\n      const faq = success.data.data;\n      dispatch?.(faqActions.updateFaq({ id, faq }));\n      navigate?.(\"/faq-items\");\n    }\n    dispatch?.(formLoaderActions.setLoading(false));\n    return [success, error];\n  },\n};\n\nexport default FaqService;\n"],"names":["reduxForm","form","handleSubmit","onSubmit","ReduxFormFields","fields","Button","color","variant","type","label","name","validate","required","component","InputRedux","cellProps","md","number","UpdateFaqItemsForm","id","navigate","useNavigate","dispatch","useAppDispatch","faq","useAppSelector","state","useEffect","FaqService","faqActions","data","question","answer","displayOrder","change","AddFaqItems","useParams","loading","formLoader","Container","maxWidth","GoBack","path","title","Banner","heading","style","position","BasicCard","CircleLoader","values","url","getFaqbyID","formLoaderActions","http","Promisable","success","error","getFaqs","FAQs","createFaq","modalActions","deleteFaq","updateFaq"],"sourceRoot":""}